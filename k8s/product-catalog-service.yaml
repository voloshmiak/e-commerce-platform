apiVersion: v1
kind: Service
metadata:
  name: product-catalog-service
  namespace: services
spec:
  type: ClusterIP
  selector:
    app: product-catalog
  ports:
    - name: grpc
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-catalog-deployment
  namespace: services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: product-catalog
  template:
    metadata:
      labels:
        app: product-catalog
    spec:
      containers:
        - name: product-catalog-service
          image: voloshmiak/ecommerce-project:product-service-v1.0
          ports:
            - containerPort: 8080
          env:
            - name: KAFKA_HOST
              valueFrom: { configMapKeyRef: { name: service-config, key: PRODUCT_CATALOG_KAFKA_HOST } }
            - name: KAFKA_PORT
              valueFrom: { configMapKeyRef: { name: service-config, key: PRODUCT_CATALOG_KAFKA_PORT } }
            - name: MONGO_HOST
              valueFrom: { configMapKeyRef: { name: service-config, key: MONGO_HOST } }
            - name: MONGO_PORT
              valueFrom: { configMapKeyRef: { name: service-config, key: MONGO_PORT } }
            - name: MONGO_DB_NAME
              valueFrom: { configMapKeyRef: { name: service-config, key: MONGO_DB_NAME } }
            - name: MONGO_USERNAME
              value: "root"
            - name: MONGO_PASSWORD
              valueFrom: { secretKeyRef: { name: service-secrets, key: MONGO_ROOT_PASSWORD } }
            - name: SERVER_PORT
              valueFrom: { configMapKeyRef: { name: service-config, key: PRODUCT_CATALOG_SERVER_PORT } }
            - name: ELASTIC_HOST
              valueFrom: { configMapKeyRef: { name: service-config, key: ELASTIC_HOST } }
            - name: ELASTIC_PORT
              valueFrom: { configMapKeyRef: { name: service-config, key: ELASTIC_PORT } }