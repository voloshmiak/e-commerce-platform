apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: services
spec:
  type: ClusterIP
  selector:
    app: user-service
  ports:
    - name: grpc
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service-deployment
  namespace: services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
        - name: user-service
          image: voloshmiak/ecommerce-project:user-service-v1.0
          ports:
            - containerPort: 8080
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: service-config
                  key: USER_DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: service-config
                  key: USER_DB_PORT
            - name: DB_USER
              value: "postgres"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: service-secrets
                  key: POSTGRES_USER_PASSWORD
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: service-config
                  key: USER_DB_NAME
            - name: SERVER_PORT
              valueFrom:
                configMapKeyRef:
                  name: service-config
                  key: USER_SERVER_PORT
            - name: KAFKA_HOST
              valueFrom:
                configMapKeyRef:
                  name: service-config
                  key: USER_KAFKA_HOST
            - name: KAFKA_PORT
              valueFrom:
                configMapKeyRef:
                  name: service-config
                  key: USER_KAFKA_PORT
            - name: DB_MIGRATIONS_PATH
              value: "/root/migrations"